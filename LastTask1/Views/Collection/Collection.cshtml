@model LastTask1.ViewModels.CollectionViewModel
@using System.Text.Json;
@using Newtonsoft.Json;
@using System.Text;
@{
    ViewData["Title"] = "Collection";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="container-fluid row bg-white m-0 p-0 w-100 shadow" id="wrap" style="box-shadow:0px 1px 10px 5px rgba(0,0,0,0.33);
													  -webkit-box-shadow:0px 1px 10px 5px rgba(0,0,0,0.33);
													  -moz-box-shadow:0px 1px 10px 5px rgba(0,0,0,0.33);">
    <div class="col-lg-4 h-100 border-right border-3 d-flex flex-column align-items-center">
        <h1 class="text-center m-5">Collection @Model.Collection.Title</h1>
        <img src="@Model.Collection.Img" class="w-100">
        <p class="h4-responsive pt-3">Theme: @Model.Collection.Theme</p>
        <p class="h4-responsive">Items: @Model.Collection.nItems</p>
        <p class="h4-responsive">Creater: @Model.User.UserName</p>
        <p class="h4-responsive mt-5">Description:</p>
        <p class="">@Model.Collection.Description</p>
        <form class="d-flex w-100 justify-content-center">
            <div class="btn-group w-75 rounded">
                <button name="collectionId" asp-controller="Collection" asp-action="Create" value="@Model.Collection.Id" type="submit" class="btn btn-warning">Edit collection</button>
                <button name="collectionId" asp-controller="Item" asp-action="Create" value="@Model.Collection.Id" type="submit" class="btn btn-success">Create item</button>
            </div>

        </form>
    </div>
    <div class="col d-flex flex-column align-items-center " id="cont">

        <h1>List items:</h1>
        <table cellpadding="0" cellspacing="0" border="0" id="table" class="sortable table table-striped table-responsive">
            <thead class="light-green white-text">
                <tr>
                    <th class="text-white">Name</th>
                    <th class="text-white">Desc</th>
                    @foreach (var field in Model.OptionalFields)
                    {
                        <th class="text-white">@field</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Items)
                {var ItemFields = JsonConvert.DeserializeObject<Dictionary<string, string>>(item.OptionalFields);
                <tr>
                    <td>@item.Title</td>
                    <td>@item.Description</td>
                    @foreach (var val in ItemFields)
                    {
                        string[] s = val.Value.Split("$$$$$");
                        @: <td>@s[1]</td>
                    }
                </tr>
                }



            </tbody>
        </table>

    



<script type="text/javascript" src="~/js/TableSort2.js"></script>


<div class="grid container-fluid m-0 p-0" style="display:none">
                <div class="row">
                    @foreach (var item in Model.Items)
                    {
                        var ItemFields = JsonConvert.DeserializeObject<Dictionary<string, string>>(item.OptionalFields);
                        @:<div class=" item col-xl-4 col-md-6 col-12 mt-3 mx-0" id="card">
                            <div class="card w-100 bg-white d-inline-flex flex-column align-items-center justify-content-between" style="box-shadow:0px 1px 10px 5px rgba(0,0,0,0.33);
                                                                          -webkit-box-shadow:0px 1px 10px 5px rgba(0,0,0,0.33);
                                                                          -moz-box-shadow:0px 1px 10px 5px rgba(0,0,0,0.33);">
                                <img src="@item.ImageUrl" class="w-100">
                                <p class="h3-responsive name">@item.Title</p>



                                @foreach (var val in ItemFields)
                                {
                                    string[] s = val.Value.Split("$$$$$");
                                    @: <p class="@val.Key.Replace(" ","") text-center mx-2">@val.Key : @s[1]</p>
                                }
                                <p class="p-3" style="max-height: 20.5em; overflow: hidden;">
                                    @item.Description
                                </p>


                                <div class="btn-group w-100 d-flex justify-content-center">
                                    <form asp-controller="Item" asp-action="Item" class="w-100 d-flex justify-content-center h-100">

                                        <button type="submit" name="itemId" value="@item.Id" class="btn btn-success p-0 pt-2 pb-2 rounded w-50">View</button>


                                    </form>

                                </div>
                            </div>
                        @:</div>
                    }






                </div>

            </div>


        </div> 

    </div>





    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>

    <script src="https://unpkg.com/masonry-layout@4/dist/masonry.pkgd.js"></script>
    <script src="https://unpkg.com/isotope-layout@3/dist/isotope.pkgd.js"></script>
    <script src="https://unpkg.com/masonry-layout@4/dist/masonry.pkgd.js"></script>
    <script type="text/javascript">
        var $grid = $('.grid').isotope({
            itemSelector: '.item',
            masonry: {
                columnWidth: '.item'
            }
        });

        // bind sort button click
        $('.sort-by-button-group').on('click', 'button', function () {
            var sortValue = $(this).attr('data-sort-value');
            $grid.isotope({ sortBy: sortValue });
        });

        // change is-checked class on buttons
        $('.button-group').each(function (i, buttonGroup) {
            var $buttonGroup = $(buttonGroup);
            $buttonGroup.on('click', 'button', function () {
                $buttonGroup.find('.is-checked').removeClass('is-checked');
                $(this).addClass('is-checked');
            });
        });

    </script>

